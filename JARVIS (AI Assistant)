import os
import webbrowser
import pyttsx3 #This is a text-to-speech conversion library in Python. It uses different speech engines based on your operating system. In this case, it's using the 'sapi5' speech engine.
import datetime #This is a standard library in Python that provides functions to work with dates and times
import speech_recognition as sr
import wikipedia
import smtplib #provides an interface for sending emails using the Simple Mail Transfer Protocol

engine = pyttsx3.init('sapi5') # Initializes the text-to-speech engine with the 'sapi5' speech API. This API is commonly used on Windows systems.
voices = engine.getProperty('voices')              #"""to convert the text to voice"""
#print(voices[1].id)
engine.setProperty('voice', voices[1].id ) #Sets the voice property of the engine to use the first voice in the list. You can change the index to select a different voice.

def speak(audio): #Defines a function named speak that takes a parameter audio
    engine.say(audio) #Instructs the text-to-speech engine to speak the text
    engine.runAndWait() #This function blocks while processing all currently queued commands. It ensures that the text is spoken before the program moves on to the next line.

speak("Hey I am Jarvis, how you doing? Could you please let me know your gender?"
      "Please press F for female and M for male")

gender = input()

def wishMe():
    hour = int(datetime.datetime.now().hour)

    if gender == "F":
        if hour >= 0 and hour < 12:
            speak("Good Morning Mam, how may i help you?")

        elif hour >= 12 and hour < 18:
            speak("Good afternoon Mam, how may i help you?")

        else:
            speak("Good evening mam, how may i help you?!")

    elif gender == "M":
        if hour >= 0 and hour < 12:
            speak("Good Morning Sir, how may i help you?")

        elif hour >= 12 and hour < 18:
            speak("Good afternoon Sir, how may i help you?")

        else:
            speak("Good evening Sir, how may i help you?")

    else:
        speak("Oops, i didn't get that, Please press F for female and M for male ")

def takeCommand():
    # It takes microphone input from the user and gives string output.

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening.....")
        r.pause_threshold = 1   # seconds of non-speaking audio before a phrase is considered complete
        r.energy_threshold = 200 # minimum audio energy to consider for recording
        audio = r.listen(source)

    try:
        print("Recognising.....")
        query = r.recognize_google( audio, language = 'en-in')
        speak(f"You just said: {query}\n")
        print(f"You just said: {query}\n")

    except Exception as e:
        print(e)
        print("Sorry I didn't get that. Could you please repeat?")
        speak("Sorry I didn't get that. Could you please repeat?")
        return "None"
    return query

def sendEmail(to , content):
    server = smtplib.SMTP('smtp.gmail.com', 587) #creates an SMTP object named server and connects to the Gmail SMTP server.
    server.ehlo()
    server.starttls()
    server.login('sanyeahkhan@gmail.com', 'kjsy rqrp pdjd zmoa')
    server.sendmail('sanyeahkhan@gmail.com', to, content)
    server.close()


if __name__ == "__main__":
    wishMe()

    while(True):
        query = takeCommand().lower()

        #Logic for executing task based on query
        if "wikipedia" in query:
            speak("Searching Wikipedia...")
            query = query.replace("wikipedia", " ") #done to refine the search query before using it to fetch information
            results = wikipedia.summary(query, sentences = 2) #summary function retrieves a short summary of the Wikipedia page related to the quer
            speak("According to wikipedia")
            print(results)
            speak(results)

        elif "open youtube" in query:
            speak("opening youtube")
            webbrowser.open("youtube.com")

        elif "open google" in query:
            speak("opening google")
            webbrowser.open("google.com")

        elif "open stack overflow" in query:
            speak("opening stack overflow")
            webbrowser.open("stackoverflow.com")

        elif "who are you" in query or "what is your name" in query:
            speak("I am Jarvis, I am here to help you! Please tell me your query")

        elif "play music" in query:
            speak("Playing music")
            music_file =  r'C:\Users\Sanya\PycharmProjects\firstprog\MP3\favorite song.mp3'
            # songs = os.listdir(music_dir)
            # print(songs)
            os.startfile(music_file)

        elif "what's the time" in query:
            current_time = datetime.datetime.now().strftime("%H:%M:%S") #formats that date and time as a string with hours, minutes, and seconds in the "HH:MM:SS"
            speak(f"The current time is {current_time}")

        elif "open code" in query:
            code_path = r'C:\Users\Sanya\PycharmProjects\firstprog\exercise 6.py'
            os.startfile(code_path)

        elif "stop this program" in query:
            speak("Goodbye mate, it was pleasure talking to you, Have a nice day")
            exit()

        elif "send email" in query:
            try:
                speak("Please enter the recipient's email address:")
                email_id = input("Please enter the recipient's email address:\n")
                speak("Please type the content or message you want to include in the email:")
                content = takeCommand()
                to = {email_id}
                sendEmail(to, content)
                speak("Your email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry, I couldn't send the email. Please try again")
